###############################################################################
#
#                              LIVING ROOM THERMOSTAT 
#
###############################################################################
#------------------------------------------------------------------------------
group:
#------------------------------------------------------------------------------
  termostato_salotto:
    name: Termostato Salotto
    control: hidden
    entities:
      - input_boolean.termostato_salotto_interruttore
      - climate.termostato_salotto
      - input_number.termostato_salotto_target_temp
      - sensor.termostato_salotto_ac_target
      - input_boolean.termostato_salotto_timer_interruttore
      - input_number.termostato_salotto_timer
      - sensor.termostato_salotto_tempo_impostato
      - sensor.countdown_salotto
      - switch.salotto_scalda
#------------------------------------------------------------------------------
sensor:
#------------------------------------------------------------------------------
  - platform: template
    sensors:
      temperatura_corretta_salotto_per_termostato:
        friendly_name: "Temperatura Salotto"
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.temperatura_salotto_temperature')|float - 1.8 }}"
#******************************************************************************
  - platform: template
    sensors:
      tempo_spegnimento_salotto:
        value_template: "{{ ( ( states.input_number.termostato_salotto_timer.state | int) * 60 ) | int }}"
#******************************************************************************
# Termostato Salotto
  - platform: template
    sensors:
      termostato_salotto_ac_setting:
        friendly_name: 'Current AC Cool Setting'
        value_template: 'salotto_automatico_auto_fisso_{{ states.input_number.termostato_salotto_target_temp.state | int }}'
      termostato_salotto_ac_target:
        friendly_name: 'Temperatura Impostata'
        value_template: '{{ states.input_number.termostato_salotto_target_temp.state | int }}'
        unit_of_measurement: '°C'
      termostato_salotto_tempo_impostato:
        friendly_name: 'Tempo Impostato'
        value_template: '{{ states.input_number.termostato_salotto_timer.state | int }}'
        unit_of_measurement: 'min'
#******************************************************************************
  - platform: template
    sensors:
      countdown_salotto:
        friendly_name: "Tempo Rimanente"
        value_template: "{{ states('sensor.countdown_salotto_hours') }} : {{ states('sensor.countdown_salotto_minutes') }} : {{ states('sensor.countdown_salotto_seconds') }}"
  - platform: template
    sensors:
      countdown_salotto_hours:
        value_template: >
          {% if ( ( states('input_number.countdown_salotto') | float / 3600 ) | int ) < 10 %}
            0{{( states('input_number.countdown_salotto') | float / 3600 ) | int}}
          {% else %}
            {{( states('input_number.countdown_salotto') | float / 3600 ) | int}}
          {% endif %}
  - platform: template
    sensors:
      countdown_salotto_minutes:
        value_template: >
          {% if ( ((( states('input_number.countdown_salotto') | float / 3600 ) - ( states('sensor.countdown_salotto_hours') | float )) * 60 ) | int ) < 10 %}
            0{{((( states('input_number.countdown_salotto') | float / 3600 ) - ( states('sensor.countdown_salotto_hours') | float )) * 60 ) | int}}
          {% else %}
            {{((( states('input_number.countdown_salotto') | float / 3600 ) - ( states('sensor.countdown_salotto_hours') | float )) * 60 ) | int}}
          {% endif %}
  - platform: template
    sensors:
      countdown_salotto_seconds:
        value_template: >
          {% if ( ((((( states('input_number.countdown_salotto') | float / 3600 ) - ( states('sensor.countdown_salotto_hours') | float )) * 60 ) - ( states('sensor.countdown_salotto_minutes') | float )) * 60 ) | int ) < 10 %}
            0{{((((( states('input_number.countdown_salotto') | float / 3600 ) - ( states('sensor.countdown_salotto_hours') | float )) * 60 ) - ( states('sensor.countdown_salotto_minutes') | float )) * 60 ) | int}}
          {% else %}
            {{((((( states('input_number.countdown_salotto') | float / 3600 ) - ( states('sensor.countdown_salotto_hours') | float )) * 60 ) - ( states('sensor.countdown_salotto_minutes') | float )) * 60 ) | int}}
          {% endif %}
  - platform: template
    sensors:
      countdown_salotto_meno_1:
        value_template: "{{( states('input_number.countdown_salotto') | int - 1 ) | int}}"
#******************************************************************************
  - platform: broadlink
    update_interval: 120
    name: Temperatura Salotto per termostato
    host: !secret broadlink_rm_pro
    mac: !secret mac_broadlink_rm_pro
    monitored_conditions:
      - temperature
#------------------------------------------------------------------------------
switch:
#------------------------------------------------------------------------------
  - platform: broadlink
    host: !secret broadlink_rm_pro
    mac: !secret mac_broadlink_rm_pro
    timeout: 15
    type: rm2
    switches:
      salotto_scalda:
        command_on: 'JgDuAGMAASYSDw8yDxIRDxIPEg8SDhIPEg4SMBIOEg8SLxIPEgwVMA8yDzIRMRIvEg8SDhIPEg8SDhIPEgsWDhIPEg8SDw8SDxEPEg8SEQ8REBEQEQ8REBEQEQ8REBEMFQ8SDxIPERAREA8RDxIPEg8yETARMBIwEmBkAAEkEjASDhEREBAREA8SEQ8PEg8SDzIREBEPEQsWDBUwETARDBUwETERMREPDzMPEREwEjASDhIPERARMBEwETESDxEQDxEQEQ8SDxERMRIvEi8SMBEwEQwWLxIPEg4SMA8SDxIPEREQERARMBIvEjARMBIADQUAAAAAAAAAAAAA'
        command_off: 'JgBoAREAAktgAAEoDhMOMw4TDhIPEg4TDhIPEg4SDzMOEg8SDjQNNA4TDTQOMxAxDzMOMw4TDhIOEw4SDxIOEw4TDhMNEw4TDRQOEg4TDhIPEg4TDhIPEg4SDxIOEw4SDxIOEw4TDxINEw4TDRMOExARDhIPEg4SDzMOMw5kYAABKA4zDhQNEw4TDRMOEw0UDhIOEw4zDhMOEg8zDhIOMw8zDjQNNA00DTQPEg4TDhIOEw4SDxIOEw4SDxIOEg8SDhMOEw4TDRMOEw0UDRMOExAQDxIOEw4SDxIOEg8SDhMQEA8SDhMOEw4TDRMOEw0TDhMOZGAAASgOMw8SDhIPEg4TDhIPEg4TDhIONA4TDRMONA00DjMOMw8SDjMQMQ8zEDEQMg8yDjMONA4SDhMOEg8zDjMOMw4TDhIPEg4TDhMOEw0TDhMNEw40DjMOEw4zDjMOEw4SDxIOEw4SDhQNEw4TDRMONA4zDgANBQ=='
      salotto_timer_2_ore:
        command_on: 'JgBoARUAAjtjAAEnDhMOMxEQERARDxIPERAREBIOEjASDxEPEjASDxEQETEOMxExETARMRIOEg8REBEQEQ8SDxIPERAREBEQDxIOEg8SERAREBEPEg8SDxEQEQ8SDxIPERAREBEPERARERAQERAPEhEQEQ8RMREwEjARMBJhYwABJhIwDxIREBEQEBEOEg8SDxIPEg8yEBEREBEwETEPERIwETASMQ4zDzMOEhAREBEREBEwERAREA8REg8REBEQEQ8SDxERDhIPEhEQERAPERARERAREBEwEBEREA8REBEREBEQERAREA8SDhMOEg8SDxIPY2IAASgRMBIPEBERDxEQEg8REBEQEBAQMxAQDxIREA4zEBEQMhEPEjARMBIwETASMBExETERMA8SDxIPERAyDzIQMhEQEQ8SDxEQERAREBExDjMRMQ8yEjARDxIwERARDxIwERAREBEPEBIPEg4zDzMPMhExEQANBQ=='
  - platform: template
    switches:
      accendi_termostato_dashboard_salotto:
        value_template: "{{ is_state('input_boolean.termostato_salotto_interruttore', 'on') }}"
        turn_on:
          - service: homeassistant.turn_on
            data:
              entity_id: input_boolean.termostato_salotto_interruttore
          - service: homeassistant.turn_on
            data:
              entity_id: input_boolean.termostato_salotto_timer_interruttore
        turn_off:
          - service: homeassistant.turn_off
            data:
              entity_id: input_boolean.termostato_salotto_interruttore
          - service: homeassistant.turn_off
            data:
              entity_id: input_boolean.termostato_salotto_timer_interruttore
      spegni_timer_dashboard_salotto:
        value_template: "{{ is_state('input_boolean.termostato_salotto_timer_interruttore', 'on') }}"
        turn_on:
          - service: homeassistant.turn_on
            data:
              entity_id: input_boolean.termostato_salotto_timer_interruttore
        turn_off:
          - service: homeassistant.turn_off
            data:
              entity_id: input_boolean.termostato_salotto_timer_interruttore
#------------------------------------------------------------------------------
climate:
#------------------------------------------------------------------------------
  - platform: generic_thermostat
    name: Termostato Salotto
    heater: switch.salotto_scalda
    target_sensor: sensor.temperatura_salotto_temperature
    min_temp: 16
    max_temp: 30
#    target_temp: 24
    tolerance: 0.3
    min_cycle_duration:
      seconds: 5
#------------------------------------------------------------------------------
input_number:
#------------------------------------------------------------------------------
  termostato_salotto_target_temp:
    name: Imposta Temp
    min: 16
    max: 30
    step: 1
    initial: 30
#******************************************************************************
  termostato_salotto_timer:
    name: Tempo
    min: 1
    max: 240
    step: 1
    initial: 30
#******************************************************************************
  countdown_salotto:
    name: Countdown Salotto
    min: 0
    max: 7200
    step: 1
    initial: 1800
#------------------------------------------------------------------------------
input_boolean:
#------------------------------------------------------------------------------
  termostato_salotto_interruttore:
    name: Accendi
    initial: off
    icon: mdi:thermometer-lines
#******************************************************************************
  termostato_salotto_timer_interruttore:
    name: Timer
    initial: off
    icon: mdi:timer
#******************************************************************************
  countdown_salotto:
    name: Countdown Salotto
    initial: off
    icon: mdi:timelapse
#------------------------------------------------------------------------------
automation:
#------------------------------------------------------------------------------
  - alias: "Termostato salotto Attiva Riscaldamento 30 gradi, basculante e limite massimo di 2 ore"
    trigger:
      platform: state
      entity_id: climate.termostato_salotto
      to: 'heat'
    action:
      - delay:
            seconds: 5
      - service: switch.turn_on
        entity_id: switch.salotto_timer_2_ore
#******************************************************************************














#******************************************************************************
  - alias: "Termostato salotto Accensione Manuale"
    trigger:
      platform: state
      entity_id: input_boolean.termostato_salotto_interruttore
      to: 'on'
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: "climate.termostato_salotto"
          temperature: '{{ float(states.input_number.termostato_salotto_target_temp.state) }}'
#******************************************************************************
  - alias: "Termostato salotto Spegnimento Manuale"
    trigger:
      platform: state
      entity_id: input_boolean.termostato_salotto_interruttore
      to: 'off'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.termostato_salotto
          temperature: 0
#******************************************************************************
  - alias: "Termostato salotto Regola Temperatura"
    trigger:
      platform: state
      entity_id: input_number.termostato_salotto_target_temp
    condition:
      - condition: state
        entity_id: input_boolean.termostato_salotto_interruttore
        state: 'on'
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: "climate.termostato_salotto"
          temperature: '{{ float(states.input_number.termostato_salotto_target_temp.state) }}'
#******************************************************************************
  - alias: "Termostato salotto Spegni con timer"
    trigger:
      platform: state
      entity_id: input_boolean.termostato_salotto_timer_interruttore
      to: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.termostato_salotto_interruttore
      - delay: 'sensors.tempo_spegnimento_salotto'
      - service: homeassistant.turn_off
        entity_id: input_boolean.termostato_salotto_interruttore
      - service: homeassistant.turn_off
        entity_id: input_boolean.termostato_salotto_timer_interruttore
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.termostato_salotto_timer'
          value: "1800"
#******************************************************************************
  - alias: "Termostato salotto disattiva timer in caso di spegnimento manuale"
    trigger:
      platform: state
      entity_id: input_boolean.termostato_salotto_interruttore
      to: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.termostato_salotto_timer_interruttore
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.termostato_salotto_timer'
          value: "1800"
#******************************************************************************
  - alias: 'Start Countdown'
    trigger:
      platform: numeric_state
      entity_id: input_number.countdown_salotto
      above: '0'
    condition:
      condition: state
      entity_id: input_boolean.countdown_salotto
      state: 'on'
    action:
      service: script.turn_on
      entity_id: script.scala_countdown_salotto

  - alias: 'Start Countdown 2'
    trigger:
      platform: state
      entity_id: input_boolean.countdown_salotto
      to: 'on'
    condition:
      condition: numeric_state
      entity_id: input_number.countdown_salotto
      above: '0'
    action:
      service: script.turn_on
      entity_id: script.scala_countdown_salotto

  - alias: 'Stop Countdown'
    trigger:
      platform: numeric_state
      entity_id: input_number.countdown_salotto
      below: '1'
    action:
      service: homeassistant.turn_off
      entity_id: input_boolean.countdown_salotto

  - alias: 'Stop Countdown 2'
    trigger:
      platform: state
      entity_id: input_boolean.countdown_salotto
      to: 'off'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.countdown_salotto'
          value: "0"
      - service: homeassistant.turn_off
        entity_id: input_boolean.termostato_salotto_interruttore
      - service: homeassistant.turn_off
        entity_id: input_boolean.termostato_salotto_timer_interruttore
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.termostato_salotto_timer'
          value: "1800"
#******************************************************************************
#******************************************************************************
#******************************************************************************
  - alias: "Sincronizza Accensione countdown con accensione termostato"
    trigger:
      platform: state
      entity_id: input_boolean.termostato_salotto_timer_interruttore
      to: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.countdown_salotto
#******************************************************************************
  - alias: "Sincronizza Spegnimento countdown con spegnimento termostato"
    trigger:
      platform: state
      entity_id: input_boolean.termostato_salotto_timer_interruttore
      to: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.countdown_salotto
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.termostato_salotto_timer'
          value: "1800"
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.countdown_salotto'
          value: "{{ ( ( states.input_number.termostato_salotto_timer.state | int) * 60 ) | int }}"
#******************************************************************************
  - alias: "Sincronizza tempo timer con countdown"
    trigger:
      platform: state
      entity_id: input_number.termostato_salotto_timer
    action:
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.countdown_salotto'
          value: "{{ ( ( states.input_number.termostato_salotto_timer.state | int) * 60 ) | int }}"
#******************************************************************************
#******************************************************************************
#******************************************************************************
script:
  scala_countdown_salotto:
    sequence:
      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.countdown_salotto'
          value: "{{ states.sensor.countdown_salotto_meno_1.state | int }}"
      - service: script.turn_on
        data:
          entity_id: script.attendi_e_ripeti_countdown_salotto

  attendi_e_ripeti_countdown_salotto:
    sequence:
      - condition: and
        conditions:
           - condition: state
             entity_id: input_boolean.countdown_salotto
             state: 'on'
           - condition: numeric_state
             entity_id: input_number.countdown_salotto
             above: '0'
      - delay:
          milliseconds: 9
      - service: script.turn_on
        data:
          entity_id: script.scala_countdown_salotto